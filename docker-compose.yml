version: '3.8'

services:
  
  react:
    build: ./build/react
    # command: bash -c "cd ProxyWorldClient && npm start" #Development
    command: dotnet out/ProxyWorldApi.dll                 #Production
    ports:
      -  8000:8000
    volumes:
      - ./build/react/app/ProxyWorldClient/src:/app/ProxyWorldClient/src 

  razor:
    build: ./build/razor
    # command: dotnet watch run           # Development
    command: dotnet out/razor.dll         # Production
    ports:
      - 8001:8001
    volumes:
     - ./build/razor/app/Pages:/app/Pages

  django:
    build: ./build/django
    # command: python manage.py runserver 0.0.0.0:8002                      # Development
    command: gunicorn --bind 0.0.0.0:8002 composeexample.wsgi:application   # Production 
    ports:
      - 8002:8002
    volumes:
      - ./build/django/app:/code
    depends_on:
      - db

  flask:
    build: ./build/flask
    # command: python app.py                                 # Development
    command: gunicorn --bind 0.0.0.0:8003 index:application  # Production 
    ports:
      - 8003:8003
    volumes:
      - ./build/flask/app:/code

  ruby:
    build: ./build/ruby
    # command: bundle exec rails server -b 0.0.0.0 -p 8004  # Development
    command: unicorn -p 8004                                # Production
    ports:
      - 8004:8004

  spring:
    build: ./build/spring
    command: java -jar app.jar
    ports:
      - 8005:8005

  laravel:
    build: ./build/laravel
    container_name: laravel
    hostname: laravel
    command: php artisan serve --host=0.0.0.0 --port=8006
    ports: 
      - 8006:8006

  phoenix:
    build: ./build/phoenix
    container_name: phoenix
    hostname: phoenix
    command: bash -c "mix ecto.create && mix ecto.migrate && mix phx.server"
    ports:
      - 8007:8007
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      PGDATABASE: phoenix
      PGPORT: 5432
      PGHOST: db
    depends_on:
      - db

  express:
    build: ./build/express
    container_name: express
    hostname: express
    command: node app.js
    ports:
      - 8008:8008
  
  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    restart: always
 
  nginx:
    image: nginx:latest
    volumes:
      - ./build/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./build/nginx/conf.d/:/etc/nginx/conf.d/:ro
    ports:
      - 80:80
      - 443:443
    depends_on: 
      - react
      - razor
      - django
      - flask
      - ruby
      - spring
      - laravel
      - phoenix
      - express
