# CentOS - Monitoring
top
    e -> change to human readable
    W -> save changes
    h -> help


# CentOS -  Add an additional hard disk
fdisk -l
fdisk dev/sdb
    n # New Partion Extended...
    w # write changes

mkfs.ext4 /dev/sdb1

mount -t ext4 block_device /mount/point
mount -t ext4 /dev/sdb1 /mount/sdb1

/etc/fstab     # Permentant change to disk

systemctl stop docker
vim /etc/docker/daemon.json
{
    "data-root": "/mount/sdb1/docker"
}

# CentOS - Installation & Setup

hostnamectl set-hostname myvenv

# install dnf package manager and vim for text-edit

yum update -y
yum upgrade -y 
yum install -y yum-utils dnf dnf-plugins-core

dnf update -y
dnf upgrade -y
dnf install -y epel-release
dnf install -y nginx
dnf install -y bind bind-utils
dnf install -y vim
dnf install -y git
dnf install -y certbot certbot-nginx
dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
dnf install -y docker-ce docker-ce-cli containerd.io docker-compose

# Change Docker Disk
systemctl stop docker
vim /etc/docker/daemon.json
{
    "data-root": "/mount/sdb1/docker"
}
systemctl daemon-reload
systemctl restart docker

# Vim Update
git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
sh ~/.vim_runtime/install_basic_vimrc.sh

ssh-keygen
git@github.com:N-ickJones/ProxyTool.git

# SSHD config changes
PermitRootLogin without-password
PubkeyAuthentication yes
PasswordAuthentication no   # note: test key login first before this step

# For Root Key
chmod 700 ~/.ssh
chmod 644 ~/.ssh/authorized_keys
chmod 644 ~/.ssh/known_hosts
chmod 644 ~/.ssh/config
chmod 600 ~/.ssh/id_rsa
chmod 644 ~/.ssh/id_rsa.pub
chmod 600 ~/.ssh/github_rsa
chmod 644 ~/.ssh/github_rsa.pub
chmod 600 ~/.ssh/mozilla_rsa
chmod 644 ~/.ssh/mozilla_rsa.pub

# Not Root User with sudo
adduser username
passwd username
usermod -aG wheel username
su - username

# Test User
sudo ls -lah

# Make sure key is only accessible by user chmod 700 for root
ssh -i privKeyFile username@ip_address
ssh -i ~/.ssh/digOcean.txt root@159.65.103.123

# Outbound Copy over SSH ( -r for directory )
scp local_file remote_username@remote_ip:/remote_directory
scp test.txt root@159.65.103.123:/root

# Inbound Copy over SSH
scp remote_username@remote_ip:remote_file /local_directory
scp root@159.65.103.123:test.txt /root

scp -r remote_username@remote_ip:remote_dir /local_dir
scp -r root@159.65.103.123:/opt /opt

# nginx conf
scp -i ~/.ssh/digOcean.txt root@159.65.103.123:/etc/nginx/nginx.conf /etc/nginx/nginx.conf
scp -ri ~/.ssh/digOcean.txt root@159.65.103.123:/etc/nginx/conf.d /etc/nginx/

# Useful syntax for file compression
tar czf name_of_archive_file.tar.gz name_of_directory_to_tar

# Systemd
cp /opt/www/ProxyTool/systemd/system/* /etc/systemd/system/

# Docker
docker-compose build
docker-compose build --no-cache
docker-compose up

# Firewalld
sudo firewall-cmd --zone=public --permanent --add-service=http
sudo firewall-cmd --zone=public --permanent --add-service=https
#sudo firewall-cmd --zone=public --permanent --add-service=dns

# SELinux
# swap -a and -m to add or modify
semanage port -a -t http_port_t -p tcp 8000
semanage port -a -t http_port_t -p tcp 8001
semanage port -a -t http_port_t -p tcp 8002
semanage port -a -t http_port_t -p tcp 8003
semanage port -a -t http_port_t -p tcp 8004
semanage port -a -t http_port_t -p tcp 8005
semanage port -a -t http_port_t -p tcp 8006
semanage port -a -t http_port_t -p tcp 8007
semanage port -a -t http_port_t -p tcp 8008

# Find out if this is secure
sudo semanage permissive -a httpd_t

# Nginx & Docker Initialization
systemctl enable nginx
systemctl start nginx

systemctl enable docker
systemctl start docker




# Bind DNS ( not required )
vim /etc/named.conf

sudo firewall-cmd --list-services

systemctl enable named
systemctl start named

vim /etc/hosts

ls /etc/sysconfig/network-scripts

cat /etc/resolv.conf -> 127.0.0.1

# Using Network Manager
nmcli connection modify enp2s0 +ipv4.addresses "198.204.240.195/29"
nmcli connection modify enp2s0 +ipv4.addresses "198.204.240.196/29"
nmcli connection modify enp2s0 +ipv4.addresses "198.204.240.197/29"
nmcli con mod enp2s0 +ipv4.addresses "198.204.240.198/29"
ifdown enp2s0 && ifup enp2s0

# Manually
vim /etc/sysconfig/network-scripts/ifcfg-enp2s0
NM_CONTROLLED="no"
DNS1=127.0.0.1
GATEWAY=198.204.240.193
IPADDR=198.204.240.194
PREFIX=29
IPADDR1=198.204.240.195
PREFIX1=29
IPADDR2=198.204.240.196
PREFIX2=29
IPADDR3=198.204.240.197
PREFIX3=29
IPADDR4=198.204.240.198
PREFIX4=29

ifdown enp2s0 && ifup enp2s0

#Confirm
ip addr
systemctl restart named
ping google.com
nslookup google.com
# Date might mess this up

# View DNS Logs
tail /var/log/messages

# verify if hostname is neccessary
vim /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=myvenv

hostname --fqdn

# Add Domain Name

vim /etc/sysconfig/network-scripts/ifcfg-enp2s0
DOMAIN="myvenv.com"
ifdown enp2s0 && ifup enp2s0

vim /etc/hosts
198.204.240.194 myvenv.com

vim /etc/named.conf

zone "myvenv.com" IN {
        type master;
        file "myvenv.com.zone";
        allow-update { none; };
};

zone "194.240.204.198" IN {
        type master;
        file "myvenv.com.rr.zone";
        allow-update { none; };

};


vim /var/named/myvenv.com.zone
vim /var/named/myvenv.com.rr.zone

named-checkconf -z ...

named-checkzone forward ...
named-checkzone reverse ...

chown root:named ...

named-checkconf -z /etc/named.conf
named-checkzone forward myvenv.com.zon













